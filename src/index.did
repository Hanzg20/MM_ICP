service: () -> {
    getMessage: () -> (text) query;
    setMessage: (text) -> ();
}
type Membership = record {
  id : text;
  merchantName : text;
  registrationDate : nat64;
  expirationDate : text;
  members : vec principal;
  benefits : vec text;
  status : text;
  creator : principal;
};
type MembershipPayload = record {
  merchantName : text;
  expirationDate : text;
  benefits : vec text;
};
type _AzleResult = variant { Ok : Membership; Err : text };
type _AzleResult_1 = variant { Ok : vec Membership; Err : text };
type _AzleResult_2 = variant { Ok : text; Err : text };
service : () -> {
  createMembership : (MembershipPayload) -> (_AzleResult);
  getInitialMemberships : () -> (_AzleResult_1) query;
  getMembership : (text) -> (_AzleResult) query;
  getMembershipsByCreator : (principal) -> (_AzleResult_1) query;
  getMembershipsByStatus : (text) -> (_AzleResult_1) query;
  loadMoreMemberships : (float64, float64) -> (_AzleResult_1) query;
  addMember : (text, principal) -> (_AzleResult);
  extendMembership : (text, text) -> (_AzleResult);
  deactivateMembership : (text) -> (_AzleResult);
  updateMembershipBenefits : (text, vec text) -> (_AzleResult);
  membershipExpiryReminder : (text) -> (_AzleResult_2) query;
} 
